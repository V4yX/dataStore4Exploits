
   local data = {}
   
   function data:newData(dataName, ...)
       
      local self = {...}
      local t = self[1]
      
      local s, f = pcall(function()
          cConfigs = readfile(dataName..'.json')
      end)
      
      if s then
          print'Cannot create a new data with existing name.'
          return false
      elseif t == nil then 
          writefile(dataName..'.json', game:GetService('HttpService'):JSONEncode({ blank = 'waiting data' }))
          return true
      else
          writefile(dataName..'.json', game:GetService('HttpService'):JSONEncode(t))
          return true
      end
   end
   
   function data:getData(dataName)
       local t
       
       local s, f = pcall(function()
          t = readfile(dataName..'.json')
       end)
       
       if not s then
          return 'Cannot find data.' 
       end
       
       t = game:GetService('HttpService'):JSONDecode(t) 
      
      return t
   end
   
   function data:setData(dataName, t)
      local s, f = pcall(function()
          cConfigs = readfile(dataName..'.json')
      end)
      
      if typeof(t):lower() ~= 'table' then
         print'Invalid #2 argument. Must be a table.'
         return false
      end
      
      if not s then
          print'Cannot find data.'
          return false
      end
      
      writefile(dataName..'.json', game:GetService('HttpService'):JSONEncode(t))
   end
   
   return data
